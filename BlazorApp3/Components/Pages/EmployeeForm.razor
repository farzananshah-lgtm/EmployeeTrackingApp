@page "/add-employee"
@inject HttpClient Http

<h3>Add New Employee</h3>

<EditForm Model="employee" OnValidSubmit="HandleValidSubmit" FormName="EmployeeForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Email:</label>
        <InputText @bind-Value="employee.Email" />
        <ValidationMessage For="@(() => employee.Email)" />
    </div>

    <div>
        <label>First Name:</label>
        <InputText @bind-Value="employee.FirstName" />
        <ValidationMessage For="@(() => employee.FirstName)" />
    </div>

    <div>
        <label>Last Name:</label>
        <InputText @bind-Value="employee.LastName" />
        <ValidationMessage For="@(() => employee.LastName)" />
    </div>

    <div>
        <label>Street:</label>
        <InputText @bind-Value="employee.Street" />
        <ValidationMessage For="@(() => employee.Street)" />
    </div>

    <div>
        <label>City:</label>
        <InputText @bind-Value="employee.City" />
        <ValidationMessage For="@(() => employee.City)" />
    </div>

    <div>
        <label>Country:</label>
        <InputText @bind-Value="employee.Country" />
        <ValidationMessage For="@(() => employee.Country)" />
    </div>

    <div>
        <label>Department Name:</label>
        <InputText @bind-Value="employee.DepartmentName" />
        <ValidationMessage For="@(() => employee.DepartmentName)" />
    </div>

    <br />
    <button type="submit">Save</button>

    @if (!string.IsNullOrEmpty(statusMessage))
    {
        <p>@statusMessage</p>
    }
</EditForm>

@code {
    private EmployeeRequest employee = new EmployeeRequest();
    private string statusMessage;

    private async Task HandleValidSubmit()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/employee", employee);
            if (response.IsSuccessStatusCode)
            {
                statusMessage = "Employee saved successfully!";
                employee = new EmployeeRequest(); // clear form
            }
            else
            {
                statusMessage = "Error saving employee.";
            }
        }
        catch (Exception ex)
        {
            statusMessage = $"Unexpected error: {ex.Message}";
        }
    }
}
